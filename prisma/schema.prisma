// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  name          String?
  passwordHash  String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  isVerified    Boolean        @default(false)
  refreshTokens RefreshToken[]

  VerificationCode VerificationCode[]
  PasswordReset    PasswordReset[]
}

model RefreshToken {
  id           String        @id @default(cuid())
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  tokenHash    String
  revoked      Boolean       @default(false)
  createdAt    DateTime      @default(now())
  expiresAt    DateTime
  replacedById String?
  replacedBy   RefreshToken? @relation("Replacement", fields: [replacedById], references: [id])

  RefreshToken RefreshToken[] @relation("Replacement")
}

model VerificationCode {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  code      String // 6-digit code as string
  createdAt DateTime @default(now())
  expiresAt DateTime
  used      Boolean  @default(false)
}

model PasswordReset {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  tokenHash String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
}
